
struct Pixel {
   int red;
   int blue;
   int green;
};
class genome {
public:
    genome(); // constructor
    ~genome(); // destructor
    void allocate( int nGenes );
    void deallocate();
    void randomize();
    void set_red( int index, int value);  // you can add the other two
    void set_green( int index, int value); //adding  set_gren
    void set_blue (int index, int value); // adding set_blue
    int get_red( int index);  // you can add the other two
    int get_green( int index); // adding get_green
    int get_blue ( int index); // adding get_blue
    void set_mRate( double val);
    void mutate_gene( int index);
    void mutate();
    double get_mRate();
    double calculate_gene_fitness( int index, Pixel targetPixel);
    double calculate_overall_fitness( Pixel* target, int nPixels);
    Pixel get_pixel( int index);
    void print();
private:
    Pixel* genes;
    int nGenes;
};
